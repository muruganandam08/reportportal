pipeline {
    agent any

    parameters {
        choice(name: 'MODULE', choices: ['a_datacentral', 'b_datasync', 'c_myaccess'], description: 'Select module to build')
    }

    environment {
        CF_API = 'https://api.cf.your-region.hana.ondemand.com'
        CF_ORG = 'your-org'
        CF_SPACE = 'your-space'
        NODE_VERSION = 'sapcloud35' // Assuming node-sapcloud35 is a specific version or environment
    }

    tools {
        nodejs "${env.NODE_VERSION}" // Specify the node tool with the environment variable
    }

    stages {
        stage('Initialize') {
            steps {
                script {
                    echo 'Initializing Pipeline'
                }
            }
        }

        stage('Preparation') {
            steps {
                script {
                    echo 'Preparing the environment'
                    // Example: Install global dependencies or tools required
                    sh 'npm install -g mbt'
                }
            }
        }

        stage('Read MTA YAML') {
            steps {
                script {
                    def yamlFile = readFile('datacentral/mta.yaml')
                    def yamlData = readYaml text: yamlFile
                    
                    // Determine the module name based on selected choice
                    def moduleName = ''
                    switch (params.MODULE) {
                        case 'a_datacentral':
                            moduleName = 'a_datacentral'
                            break
                        case 'b_datasync':
                            moduleName = 'b_datasync'
                            break
                        case 'c_myaccess':
                            moduleName = 'c_myaccess'
                            break
                        default:
                            error "Unsupported module: ${params.MODULE}"
                    }
                    
                    echo "Selected module name: ${moduleName}"
                    
                    // Build MTA archive for the selected module
                    dir('datacentral') {
                        sh "mbt build -t mta_archives --mtar=${moduleName}.mtar"
                    }
                }
            }
        }

        stage('Deploy to SAP BTP') {
            steps {
                script {
                    echo 'Deploying to SAP BTP'
                    withCredentials([usernamePassword(credentialsId: 'cf-credentials', usernameVariable: 'CF_USERNAME', passwordVariable: 'CF_PASSWORD')]) {
                        sh """
                            cf login -a ${env.CF_API} -u $CF_USERNAME -p $CF_PASSWORD -o ${env.CF_ORG} -s ${env.CF_SPACE}
                            cf deploy datacentral/mta_archives/${moduleName}.mtar
                        """
                    }
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    echo 'Cleaning up the workspace'
                    // Example: Remove temporary files or directories
                    sh 'rm -rf datacentral/a_datacentral/node_modules'
                    sh 'rm -rf datacentral/b_datasync/node_modules'
                    sh 'rm -rf datacentral/c_myaccess/node_modules'
                }
            }
        }
    }

    post {
        success {
            script {
                echo 'Pipeline completed successfully!'
            }
        }
        failure {
            script {
                echo 'Pipeline failed!'
            }
        }
        always {
            script {
                echo 'Pipeline finished, running always steps'
                // Any additional cleanup steps, if necessary
            }
        }
    }
}
